# def assemble(grid, letter, line):
#     """ the grid is my 32w x 16h LED display -1 denotes undefined, 1 is lit with a color, 0 is black, this display can write 2 lines, line can be 0,1"""
#
#     # check if grid is full
#     if line == 0:
#         try:
#             grid[0].index(-1)
#         except:
#             print("Error: Grid full")
#             return grid
#         if grid[0].index(-1)+len(letter[0]) > 32:
#             print("Error: Grid full")
#             return grid
#     elif line == 1:
#         try:
#             grid[9].index(-1)
#         except:
#             print("Error: Grid full")
#             return grid
#         if grid[9].index(-1)+len(letter[0]) > 32:
#             print("Error: Grid full")
#             return grid
#
#     # safety check passed push letter onto grid
#     row = 0
#     col = 0
#
#     while row < len(grid):
#         while col < len(grid[row]):
#             if line == 0 and 1 <= row <= 7 and grid[row][col] == -1:
#                 z = 0
#                 while z < len(letter[row-1]):
#                     grid[row][col] = letter[row-1][z]
#                     z += 1
#                     col += 1
#                 row += 1
#                 col = 0
#             elif line == 1 and 9 <= row <= 15 and grid[row][col] == -1:
#                 z = 0
#                 while z < len(letter[row-9]):
#                     # print(row)
#                     grid[row][col] = letter[row-9][z]
#                     z += 1
#                     col += 1
#                 if row <15:
#                     row += 1
#                 else:
#                     break
#                 col = 0
#             else:
#                 col += 1
#             # print(f"{row},{col}")
#         col = 0
#         row += 1
#
#     # troubleshooting only
#     # for w in grid:
#     #     print(w)
#
#     return grid


clear_grid = [[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
             [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]]

letter = {"A" : [[0,1,1,0,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0]],
          "B" : [[1,1,1,0,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,0,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,0,0]],
          "C" : [[1,1,1,0],[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,1,1,0]],
          "D" : [[1,1,1,0,0],[1,0,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,1,1,0],[1,1,1,0,0]],
          "E" : [[1,1,1,1,0],[1,0,0,0,0],[1,0,0,0,0],[1,1,1,0,0],[1,0,0,0,0],[1,0,0,0,0],[1,1,1,1,0]],
          "F" : [[1,1,1,1,0],[1,0,0,0,0],[1,0,0,0,0],[1,1,1,0,0],[1,0,0,0,0],[1,0,0,0,0],[1,0,0,0,0]],
          "G" : [[1,1,1,1,0],[1,0,0,0,0],[1,0,0,0,0],[1,0,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0]],
          "H" : [[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0]],
          "I" : [[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0]],
          "J" : [[0,0,0,1,0],[0,0,0,1,0],[0,0,0,1,0],[0,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0]],
          "K" : [[1,0,0,1,0],[1,0,0,1,0],[1,0,1,0,0],[1,1,0,0,0],[1,0,1,0,0],[1,0,0,1,0],[1,0,0,1,0]],
          "L" : [[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,1,1,0]],
          "M" : [[1,0,0,0,1,0],[1,1,0,1,1,0],[1,0,1,0,1,0],[1,0,0,0,1,0],[1,0,0,0,1,0],[1,0,0,0,1,0],[1,0,0,0,1,0]],
          "N" : [[1,0,0,0,1,0],[1,1,0,0,1,0],[1,1,0,0,1,0],[1,0,1,0,1,0],[1,0,0,1,1,0],[1,0,0,1,1,0],[1,0,0,0,1,0]],
          "O" : [[1,1,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0]],
          "P" : [[1,1,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0],[1,0,0,0,0],[1,0,0,0,0],[1,0,0,0,0]],
          "Q" : [[1,1,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,1,1,0],[1,1,1,1,0],[0,0,0,0,1]],
          "R" : [[1,1,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0],[1,1,0,0,0],[1,0,1,0,0],[1,0,0,1,0]],
          "S" : [[1,1,1,1,0],[1,0,0,0,0],[1,0,0,0,0],[1,1,1,1,0],[0,0,0,1,0],[0,0,0,1,0],[1,1,1,1,0]],
          "T" : [[1,1,1,1,1,0],[0,0,1,0,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0]],
          "U" : [[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0]],
          "V" : [[1,0,0,0,1,0],[1,0,0,0,1,0],[1,0,0,0,1,0],[0,1,0,1,0,0],[0,1,0,1,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0]],
          "W" : [[1,0,0,0,1,0],[1,0,0,0,1,0],[1,0,0,0,1,0],[1,0,1,0,1,0],[1,0,1,0,1,0],[1,1,0,1,1,0],[1,0,0,0,1,0]],
          "X" : [[1,0,0,0,1,0],[1,0,0,0,1,0],[0,1,0,1,0,0],[0,0,1,0,0,0],[0,1,0,1,0,0],[1,0,0,0,1,0],[1,0,0,0,1,0]],
          "Y" : [[1,0,0,0,1,0],[0,1,0,1,0,0],[0,1,0,1,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0],[0,0,1,0,0,0]],
          "Z" : [[1,1,1,1,0],[0,0,0,1,0],[0,0,0,1,0],[0,0,1,0,0],[0,1,0,0,0],[1,0,0,0,0],[1,1,1,1,0]],
          "1" : [[0,1,1,0,0],[1,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,1,1,1,0]],
          "2" : [[1,1,1,1,0],[0,0,0,1,0],[0,0,0,1,0],[1,1,1,1,0],[1,0,0,0,0],[1,0,0,0,0],[1,1,1,1,0]],
          "3" : [[1,1,1,0],[0,0,1,0],[0,0,1,0],[1,1,1,0],[0,0,1,0],[0,0,1,0],[1,1,1,0]],
          "4" : [[1,0,0,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0],[0,0,0,1,0],[0,0,0,1,0],[0,0,0,1,0]],
          "5" : [[1,1,1,0],[1,0,0,0],[1,0,0,0],[1,1,1,0],[0,0,1,0],[0,0,1,0],[1,1,1,0]],
          "6" : [[1,1,1,0],[1,0,0,0],[1,0,0,0],[1,1,1,0],[1,0,1,0],[1,0,1,0],[1,1,1,0]],
          "7" : [[1,1,1,1,0],[0,0,0,1,0],[0,0,1,0,0],[0,0,1,0,0],[0,1,0,0,0],[0,1,0,0,0],[1,0,0,0,0]],
          "8" : [[1,1,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0],[1,0,0,1,0],[1,0,0,1,0],[1,1,1,1,0]],
          "9" : [[1,1,1,0],[1,0,1,0],[1,0,1,0],[1,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,1,0]],
          "0" : [[1,1,1,0],[1,0,1,0],[1,0,1,0],[1,0,1,0],[1,0,1,0],[1,0,1,0],[1,1,1,0]],
          " " : [[0],[0],[0],[0],[0],[0],[0]],
          "-" : [[0,0,0],[0,0,0],[0,0,0],[1,1,0],[0,0,0],[0,0,0],[0,0,0]],
          ":" : [[0,0],[0,0],[1,0],[0,0],[1,0],[0,0],[0,0]],
          "%": [[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,1]],
          "." : [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1,0]]}

# Examples
# grid = assemble(grid, a, 1) # push a letter
#
# grid = assemble(grid, b, 1) # push a space
#
# grid = assemble(grid, c, 1) # push a letter
#
# grid = assemble(grid, d, 1) # push a letter
#
# grid = assemble(grid, e, 1) # push a space
#
# grid = assemble(grid, f, 1) # push a letter
#
# grid = assemble(grid, space, 1) # push a letter
#
# grid = assemble(grid, space, 1) # push a letter
#
# grid = assemble(grid, space, 1) # push a letter
#
# grid = assemble(grid, space, 1) # push a letter

